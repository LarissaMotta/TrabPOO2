@model CtrlMoney.ViewModel.PessoaUsuario.PessoaUsuarioViewModel

@{
    ViewBag.Title = "SignIn";
    ViewBag.BodyClass = "login-background";
}
<div class="pt-5 justify-content-center d-block">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-9 col-12 col-lg-7 col-xl-6">
                <div class="card text-white p-1 p-sm-3 p-md-4 p-lg-5 bg-black">
                    <div class="card-body">
                        <h1 class="mb-4 display-4">SignIn</h1>
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-group">
                                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.DataNasc, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.DataNasc, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DataNasc, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
                            </div>

                            <button type="submit" class="btn btn-primary">Cadastrar</button>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
