@model CtrlMoney.ViewModel.VisaoGeralViewModel
@{
    ViewBag.Title = "Dashboard";
}

@Html.Partial("_SelecionadorMes")

<div class="py-5">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-12 col-lg-8 col-xl-6">
                <table class="table m-0">
                    <colgroup>
                        <col width="50%">
                        <col width="50%">
                    </colgroup>
                    <thead>
                        <tr>
                            <th>Visão Geral</th>
                            <th>Valor</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>@Html.DisplayNameFor(p => p.TotalReceita)</td>
                            <td>R$ @Model.TotalReceita.ToString("N2")</td>
                        </tr>
                        <tr>
                            <td>@Html.DisplayNameFor(p => p.TotalDespesa)</td>
                            <td>R$ @Model.TotalDespesa.ToString("N2")</td>
                        </tr>
                        <tr>
                            <td>@Html.DisplayNameFor(p => p.Caixa)</td>
                            <td>R$ @Model.Caixa.ToString("N2")</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="col-sm-8 col-md-6 col-xl-4 col-lg-5 col-11">
                <canvas id="visao-geral-chart"></canvas>
            </div>
        </div>
    </div>
</div>
<hr>
<div class="py-5">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-12 col-lg-8 col-xl-6">
                <table class="table m-0">
                    <colgroup>
                        <col width="50%">
                        <col width="50%">
                    </colgroup>
                    <thead>
                        <tr>
                            <th>Receitas</th>
                            <th>Valor</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            foreach (string categoria in Model.CategoriaReceitaValue.Keys)
                            {
                                <tr>
                                    <td>@Html.ActionLink(categoria, "Index", "Receitas", new { mes = ViewBag.MesSelecionado + 1, ano = ViewBag.AnoSelecionado, categoria = categoria }, null)</td>
                                    <td>R$ @Model.CategoriaReceitaValue[categoria].ToString("N2")</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
            <div class="col-sm-8 col-md-6 col-xl-4 col-lg-5 col-11">
                <canvas id="receitas-chart" class=""></canvas>
            </div>
        </div>
    </div>
</div>
<hr>
<div class="py-5">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-12 col-xl-6 col-lg-8">
                <table class="table m-0">
                    <colgroup>
                        <col width="50%">
                        <col width="50%">
                    </colgroup>
                    <thead>
                        <tr>
                            <th>Despesas</th>
                            <th>Valor</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            foreach (string categoria in Model.CategoriaDespesaValue.Keys)
                            {
                                <tr>
                                    <td>@Html.ActionLink(categoria, "Index", "Despesas", new { mes = ViewBag.MesSelecionado + 1, ano = ViewBag.AnoSelecionado, categoria = categoria }, null)</td>
                                    <td>R$ @Model.CategoriaDespesaValue[categoria].ToString("N2")</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
            <div class="col-sm-8 col-md-6 col-xl-4 col-lg-5 col-11">
                <canvas id="despesas-chart"></canvas>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    @Scripts.Render("~/bundles/Dashboard")
    @*<script src="Chart.bundle.min.js"></script>*@
<script>
    $GeraGraficoDoughnut({
        'id': document.getElementById("visao-geral-chart"),
        'labels': ["Receitas", "Despesas", "Caixa"],
        'data': @Html.Raw(Json.Encode(new decimal[] { Model.TotalReceita, Model.TotalDespesa, Model.Caixa })),
        'colors': ['rgba(18,187,173, 1)', 'rgba(220,53,69, 1)', 'rgba(79,112,206, 1)']
    });

        @{

            string[] colors = new string[Model.CategoriaReceitaValue.Count()];
            Random random = new Random();
            for (int i = 0; i < colors.Count(); i++)
            {
                int randomR = random.Next(0,255);
                int randomG = random.Next(0,255);
                int randomB = random.Next(0,255);

                string graphBackground = "rgb("
                        + randomR + ", "
                        + randomG + ", "
                        + randomB + ")";

                colors[i] = graphBackground;
            }
            <text>
                
                $GeraGraficoDoughnut({
                    'id': document.getElementById('receitas-chart'),
                    'labels': @Html.Raw(Json.Encode(Model.CategoriaReceitaValue.Keys.ToArray())),
                    'data': @Html.Raw(Json.Encode(Model.CategoriaReceitaValue.Values.ToArray())),
                    'colors': @Html.Raw(Json.Encode(colors))
                });
            </text>

            colors = new string[Model.CategoriaDespesaValue.Count()];
            for (int i = 0; i < colors.Count(); i++)
            {
                int randomR = random.Next(0,255);
                int randomG = random.Next(0,255);
                int randomB = random.Next(0,255);

                string graphBackground = "rgb("
                        + randomR + ", "
                        + randomG + ", "
                        + randomB + ")";

                colors[i] = graphBackground;
            }
            <text>
                $GeraGraficoDoughnut({
                    'id': document.getElementById('despesas-chart'),
                    'labels': @Html.Raw(Json.Encode(Model.CategoriaDespesaValue.Keys.ToArray())),
                    'data': @Html.Raw(Json.Encode(Model.CategoriaDespesaValue.Values.ToArray())),
                    'colors': @Html.Raw(Json.Encode(colors))
                });
            </text>
        }

</script>
}